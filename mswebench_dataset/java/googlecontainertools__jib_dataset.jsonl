{"org": "googlecontainertools", "repo": "jib", "number": 4144, "state": "closed", "title": "Add defaut base image for Java 21", "body": "I looked at all occurrences of \"eclipse-temurin\", I don't think I missed other places to update.\r\n\r\nThank you for your interest in contributing! For general guidelines, please refer to\r\nthe [contributing guide](https://github.com/GoogleContainerTools/jib/blob/master/CONTRIBUTING.md).\r\n\r\nBefore filing a pull request, make sure to do the following:\r\n\r\n- [x] Create a new issue at https://github.com/GoogleContainerTools/jib/issues/new/choose.\r\n- [ ] Ensure that your implementation plan is approved by the team.\r\n- [x] Verify that integration tests and unit tests are passing after the change.\r\n- [x] Address all checkstyle issues. Refer to\r\n  the [style guide](https://github.com/GoogleContainerTools/jib/blob/master/STYLE_GUIDE.md).\r\n\r\nThis helps to reduce the chance of having a pull request rejected.\r\n\r\nFixes #4137 üõ†Ô∏è", "base": {"label": "GoogleContainerTools:master", "ref": "master", "sha": "8df72a1ab4d60cf4e5800963c787448e1b9c71b3"}, "resolved_issues": [{"number": 4137, "title": "Automatically select correct base image for Java 21", "body": "**Environment**:\r\n\r\n- *Jib version:* 3.4.0\r\n- *Build tool:* Maven\r\n- *OS:* Fedora Linux\r\n\r\n**Description of the issue**:\r\n\r\nJib automatically selects the correct base image for Java 8,11 and 17 but not 21.\r\n\r\n**Expected behavior**:\r\n\r\nJib should automatically select `eclipse-temurin:21-jre` when Java 21 is detected.\r\n\r\n**Steps to reproduce**:\r\n  1. Switch maven-compiler-plugin to use Java 21\r\n  2. Run a build with Jib\r\n  3. See error message \"Your project is using Java 21 but the base image is for Java 17, perhaps you should configure a Java 21-compatible base image using the '<from><image>' parameter, or set maven-compiler-plugin's '<target>' or '<release>' version to 17 or below in your build configuration: IncompatibleBaseImageJavaVersionException\"\r\n\r\n**Log output**: https://github.com/opentripplanner/OpenTripPlanner/actions/runs/6809930157/job/18517607512"}], "fix_patch": "diff --git a/docs/google-cloud-build.md b/docs/google-cloud-build.md\nindex b2679ff5e2..71d779bdaa 100644\n--- a/docs/google-cloud-build.md\n+++ b/docs/google-cloud-build.md\n@@ -13,7 +13,7 @@ Any Java container can be used for building, not only the `gcr.io/cloud-builders\n \n ```yaml\n steps:\n-  - name: 'docker.io/library/eclipse-temurin:17'\n+  - name: 'docker.io/library/eclipse-temurin:21'\n     entrypoint: './gradlew'\n     args: ['--console=plain', '--no-daemon', ':server:jib', '-Djib.to.image=gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA']\n ```\ndiff --git a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarFiles.java b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarFiles.java\nindex 7c59cf86da..ca06fdc273 100644\n--- a/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarFiles.java\n+++ b/jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarFiles.java\n@@ -89,6 +89,9 @@ private static String getDefaultBaseImage(ArtifactProcessor processor) {\n     if (processor.getJavaVersion() <= 11) {\n       return \"eclipse-temurin:11-jre\";\n     }\n-    return \"eclipse-temurin:17-jre\";\n+    if (processor.getJavaVersion() <= 17) {\n+      return \"eclipse-temurin:17-jre\";\n+    }\n+    return \"eclipse-temurin:21-jre\";\n   }\n }\ndiff --git a/jib-gradle-plugin/README.md b/jib-gradle-plugin/README.md\nindex 99fd6af328..72f92b3d9e 100644\n--- a/jib-gradle-plugin/README.md\n+++ b/jib-gradle-plugin/README.md\n@@ -212,7 +212,7 @@ Field | Type | Default | Description\n \n Property | Type | Default | Description\n --- | --- | --- | ---\n-`image` | `String` | `eclipse-temurin:{8,11,17}-jre` (or `jetty` for WAR) | The image reference for the base image. The source type can be specified using a [special type prefix](#setting-the-base-image).\n+`image` | `String` | `eclipse-temurin:{8,11,17,21}-jre` (or `jetty` for WAR) | The image reference for the base image. The source type can be specified using a [special type prefix](#setting-the-base-image).\n `auth` | [`auth`](#auth-closure) | *None* | Specifies credentials directly (alternative to `credHelper`).\n `credHelper` | `String` | *None* | Specifies a credential helper that can authenticate pulling the base image. This parameter can either be configured as an absolute path to the credential helper executable or as a credential helper suffix (following `docker-credential-`).\n `platforms` | [`platforms`](#platforms-closure) | See [`platforms`](#platforms-closure) | Configures platforms of base images to select from a manifest list.\ndiff --git a/jib-maven-plugin/README.md b/jib-maven-plugin/README.md\nindex a9f88516b8..37d347355a 100644\n--- a/jib-maven-plugin/README.md\n+++ b/jib-maven-plugin/README.md\n@@ -261,7 +261,7 @@ Field | Type | Default | Description\n \n Property | Type | Default | Description\n --- | --- | --- | ---\n-`image` | string | `eclipse-temurin:{8,11,17}-jre` (or `jetty` for WAR) | The image reference for the base image. The source type can be specified using a [special type prefix](#setting-the-base-image).\n+`image` | string | `eclipse-temurin:{8,11,17,21}-jre` (or `jetty` for WAR) | The image reference for the base image. The source type can be specified using a [special type prefix](#setting-the-base-image).\n `auth` | [`auth`](#auth-object) | *None* | Specifies credentials directly (alternative to `credHelper`).\n `credHelper` | string | *None* | Specifies a credential helper that can authenticate pulling the base image. This parameter can either be configured as an absolute path to the credential helper executable or as a credential helper suffix (following `docker-credential-`).\n `platforms` | list | See [`platform`](#platform-object) | Configures platforms of base images to select from a manifest list.\ndiff --git a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java\nindex 21b314dc29..f5b8f1f7d1 100644\n--- a/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java\n+++ b/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java\n@@ -530,6 +530,9 @@ static JavaContainerBuilder getJavaContainerBuilderWithBaseImage(\n     if (isKnownJava17Image(prefixRemoved) && javaVersion > 17) {\n       throw new IncompatibleBaseImageJavaVersionException(17, javaVersion);\n     }\n+    if (isKnownJava21Image(prefixRemoved) && javaVersion > 21) {\n+      throw new IncompatibleBaseImageJavaVersionException(21, javaVersion);\n+    }\n \n     ImageReference baseImageReference = ImageReference.parse(prefixRemoved);\n     if (baseImageConfig.startsWith(Jib.DOCKER_DAEMON_IMAGE_PREFIX)) {\n@@ -772,8 +775,10 @@ static String getDefaultBaseImage(ProjectProperties projectProperties)\n       return \"eclipse-temurin:11-jre\";\n     } else if (javaVersion <= 17) {\n       return \"eclipse-temurin:17-jre\";\n+    } else if (javaVersion <= 21) {\n+      return \"eclipse-temurin:21-jre\";\n     }\n-    throw new IncompatibleBaseImageJavaVersionException(17, javaVersion);\n+    throw new IncompatibleBaseImageJavaVersionException(21, javaVersion);\n   }\n \n   /**\n@@ -1097,4 +1102,14 @@ private static boolean isKnownJava11Image(String imageReference) {\n   private static boolean isKnownJava17Image(String imageReference) {\n     return imageReference.startsWith(\"eclipse-temurin:17\");\n   }\n+\n+  /**\n+   * Checks if the given image is a known Java 21 image. May return false negative.\n+   *\n+   * @param imageReference the image reference\n+   * @return {@code true} if the image is a known Java 21 image\n+   */\n+  private static boolean isKnownJava21Image(String imageReference) {\n+    return imageReference.startsWith(\"eclipse-temurin:21\");\n+  }\n }\n", "test_patch": "diff --git a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarFilesTest.java b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarFilesTest.java\nindex 3775aeb13b..225d242ca0 100644\n--- a/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarFilesTest.java\n+++ b/jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarFilesTest.java\n@@ -72,6 +72,7 @@ public class JarFilesTest {\n         \"11, eclipse-temurin:11-jre\",\n         \"13, eclipse-temurin:17-jre\",\n         \"17, eclipse-temurin:17-jre\",\n+        \"21, eclipse-temurin:21-jre\",\n       })\n   public void testToJibContainer_defaultBaseImage(int javaVersion, String expectedBaseImage)\n       throws IOException, InvalidImageReferenceException {\ndiff --git a/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessorTest.java b/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessorTest.java\nindex 7fd608667c..cfb181a85c 100644\n--- a/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessorTest.java\n+++ b/jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessorTest.java\n@@ -903,7 +903,8 @@ public void testGetDefaultBaseImage_warProject()\n         \"9, eclipse-temurin:11-jre\",\n         \"11, eclipse-temurin:11-jre\",\n         \"13, eclipse-temurin:17-jre\",\n-        \"17, eclipse-temurin:17-jre\"\n+        \"17, eclipse-temurin:17-jre\",\n+        \"21, eclipse-temurin:21-jre\"\n       })\n   public void testGetDefaultBaseImage_defaultJavaBaseImage(\n       int javaVersion, String expectedBaseImage) throws IncompatibleBaseImageJavaVersionException {\n@@ -913,16 +914,16 @@ public void testGetDefaultBaseImage_defaultJavaBaseImage(\n   }\n \n   @Test\n-  public void testGetDefaultBaseImage_projectHigherThanJava17() {\n-    when(projectProperties.getMajorJavaVersion()).thenReturn(20);\n+  public void testGetDefaultBaseImage_projectHigherThanJava21() {\n+    when(projectProperties.getMajorJavaVersion()).thenReturn(22);\n \n     IncompatibleBaseImageJavaVersionException exception =\n         assertThrows(\n             IncompatibleBaseImageJavaVersionException.class,\n             () -> PluginConfigurationProcessor.getDefaultBaseImage(projectProperties));\n \n-    assertThat(exception.getBaseImageMajorJavaVersion()).isEqualTo(17);\n-    assertThat(exception.getProjectMajorJavaVersion()).isEqualTo(20);\n+    assertThat(exception.getBaseImageMajorJavaVersion()).isEqualTo(21);\n+    assertThat(exception.getProjectMajorJavaVersion()).isEqualTo(22);\n   }\n \n   @Test\n@@ -980,7 +981,9 @@ public void testGetJavaContainerBuilderWithBaseImage_registryWithPrefix()\n         \"eclipse-temurin:11, 11, 15\",\n         \"eclipse-temurin:11-jre, 11, 15\",\n         \"eclipse-temurin:17, 17, 19\",\n-        \"eclipse-temurin:17-jre, 17, 19\"\n+        \"eclipse-temurin:17-jre, 17, 19\",\n+        \"eclipse-temurin:21, 21, 22\",\n+        \"eclipse-temurin:21-jre, 21, 22\"\n       })\n   public void testGetJavaContainerBuilderWithBaseImage_incompatibleJavaBaseImage(\n       String baseImage, int baseImageJavaVersion, int appJavaVersion) {\n@@ -1010,8 +1013,8 @@ public void testGetJavaContainerBuilderWithBaseImage_java12BaseImage()\n   }\n \n   @Test\n-  public void testGetJavaContainerBuilderWithBaseImage_java19NoBaseImage() {\n-    when(projectProperties.getMajorJavaVersion()).thenReturn(19);\n+  public void testGetJavaContainerBuilderWithBaseImage_java22NoBaseImage() {\n+    when(projectProperties.getMajorJavaVersion()).thenReturn(22);\n     when(rawConfiguration.getFromImage()).thenReturn(Optional.empty());\n     IncompatibleBaseImageJavaVersionException exception =\n         assertThrows(\n@@ -1019,8 +1022,8 @@ public void testGetJavaContainerBuilderWithBaseImage_java19NoBaseImage() {\n             () ->\n                 PluginConfigurationProcessor.getJavaContainerBuilderWithBaseImage(\n                     rawConfiguration, projectProperties, inferredAuthProvider));\n-    assertThat(exception.getBaseImageMajorJavaVersion()).isEqualTo(17);\n-    assertThat(exception.getProjectMajorJavaVersion()).isEqualTo(19);\n+    assertThat(exception.getBaseImageMajorJavaVersion()).isEqualTo(21);\n+    assertThat(exception.getProjectMajorJavaVersion()).isEqualTo(22);\n   }\n \n   @Test\n", "fixed_tests": {"jib-cli:test": {"run": "NONE", "test": "FAIL", "fix": "PASS"}, "jib-cli:compileJava": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-plugins-common:test": {"run": "NONE", "test": "FAIL", "fix": "PASS"}, "jib-plugins-common:compileJava": {"run": "NONE", "test": "NONE", "fix": "PASS"}}, "p2p_tests": {"jib-maven-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:compileTestJava": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-core:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generatePomFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:compileTestJava": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMetadataFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginUnderTestMetadata": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:generateSources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileTestJava": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileTestJava": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:test": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-core:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMavenPluginDescriptor": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginDescriptors": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}}, "f2p_tests": {"jib-cli:test": {"run": "NONE", "test": "FAIL", "fix": "PASS"}, "jib-plugins-common:test": {"run": "NONE", "test": "FAIL", "fix": "PASS"}}, "s2p_tests": {}, "n2p_tests": {"jib-cli:compileJava": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-plugins-common:compileJava": {"run": "NONE", "test": "NONE", "fix": "PASS"}}, "run_result": {"passed_count": 58, "failed_count": 2, "skipped_count": 15, "passed_tests": ["jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-plugins-extension-common:classes", "jib-maven-plugin:jar", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-core:processResources", "jib-gradle-plugin:processResources", "jib-maven-plugin-extension-api:clean", "jib-maven-plugin:generateMetadataFileForMavenJavaPublication", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:clean", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-cli:processTestResources", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testClasses", "jib-cli:generateSources"], "failed_tests": ["com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "jib-gradle-plugin:test"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "test_patch_result": {"passed_count": 63, "failed_count": 10, "skipped_count": 15, "passed_tests": ["jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-maven-plugin:test", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-extension-common:classes", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-core:processResources", "jib-gradle-plugin:processResources", "jib-maven-plugin-extension-api:clean", "jib-maven-plugin:generateMetadataFileForMavenJavaPublication", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:clean", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-cli:processTestResources", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testClasses", "jib-cli:generateSources"], "failed_tests": ["com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessorTest > testGetDefaultBaseImage_defaultJavaBaseImage(21, eclipse-temurin:21-jre) [6]", "com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessorTest > testGetJavaContainerBuilderWithBaseImage_incompatibleJavaBaseImage(eclipse-temurin:21-jre, 21, 22) [11]", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessorTest > testGetDefaultBaseImage_projectHigherThanJava21", "jib-plugins-common:test", "jib-cli:test", "com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessorTest > testGetJavaContainerBuilderWithBaseImage_java22NoBaseImage", "com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessorTest > testGetJavaContainerBuilderWithBaseImage_incompatibleJavaBaseImage(eclipse-temurin:21, 21, 22) [10]", "jib-gradle-plugin:test", "com.google.cloud.tools.jib.cli.jar.JarFilesTest > testToJibContainer_defaultBaseImage(21, eclipse-temurin:21-jre) [5]"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "fix_patch_result": {"passed_count": 67, "failed_count": 2, "skipped_count": 15, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-maven-plugin:test", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-core:processResources", "jib-gradle-plugin:processResources", "jib-maven-plugin-extension-api:clean", "jib-maven-plugin:generateMetadataFileForMavenJavaPublication", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:clean", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-cli:processTestResources", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test", "jib-cli:generateSources"], "failed_tests": ["com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "jib-gradle-plugin:test"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "instance_id": "googlecontainertools__jib-4144"}
{"org": "googlecontainertools", "repo": "jib", "number": 4035, "state": "closed", "title": "fix: fix WWW-Authenticate header parsing for Basic authentication", "body": "Fixes #4032 üõ†Ô∏è\r\n\r\nThis accepts the Basic auth scheme without realm.\r\n", "base": {"label": "GoogleContainerTools:master", "ref": "master", "sha": "934814cc5a2f8d22af8644aabe0d2a2e803818cd"}, "resolved_issues": [{"number": 4032, "title": "Jib authentification does not respect www-authenticate specification allowing Basic auth without specifying realm", "body": "**Environment**:\r\n\r\n- *Jib version:* 3.3.2\r\n- *Build tool:* Gradle\r\n- *OS:* Macos Ventura 13.3.1\r\n\r\n**Description of the issue**:\r\nWhen trying to login to my self-hosted Docker registry, Jib fails with the following error:\r\n```\r\nCaused by: com.google.cloud.tools.jib.api.RegistryAuthenticationFailedException: Failed to authenticate with registry <my registry> because: 'Bearer' was not found in the 'WWW-Authenticate' header, tried to parse: Basic\r\n```\r\nHaving a look to `com.google.cloud.tools.jib.registry.RegistryAuthenticator#fromAuthenticationMethod` I see that regexp used to determine authentification method has a space before the `.*`. \r\n```java\r\nauthenticationMethod.matches(\"^(?i)(basic) .*\")\r\n```\r\nThis makes jib to fail to select auth method given header `WWW-Authenticate: Basic`\r\n\r\n**Expected behavior**:\r\nAccording to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/WWW-Authenticate#syntax it is allowed to use `WWW-Authenticate: Basic` without providing any realm/charset. Jib should allow that\r\n\r\n**Steps to reproduce**:\r\nTry to login to any registry responding with `WWW-Authenticate: Basic` header.\r\n"}], "fix_patch": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java\nindex 1b4acde65d..0fc0a219da 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryAuthenticator.java\n@@ -72,9 +72,9 @@ static Optional<RegistryAuthenticator> fromAuthenticationMethod(\n       @Nullable String userAgent,\n       FailoverHttpClient httpClient)\n       throws RegistryAuthenticationFailedException {\n-    // If the authentication method starts with 'basic ' (case insensitive), no registry\n+    // If the authentication method starts with 'basic' (case insensitive), no registry\n     // authentication is needed.\n-    if (authenticationMethod.matches(\"^(?i)(basic) .*\")) {\n+    if (authenticationMethod.matches(\"^(?i)(basic).*\")) {\n       return Optional.empty();\n     }\n \n", "test_patch": "diff --git a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java\nindex fad7c41fcf..0ce5be3dba 100644\n--- a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java\n+++ b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryAuthenticatorTest.java\n@@ -16,6 +16,9 @@\n \n package com.google.cloud.tools.jib.registry;\n \n+import static com.google.common.truth.Truth.assertThat;\n+import static com.google.common.truth.Truth8.assertThat;\n+\n import com.google.cloud.tools.jib.api.Credential;\n import com.google.cloud.tools.jib.api.RegistryAuthenticationFailedException;\n import com.google.cloud.tools.jib.http.FailoverHttpClient;\n@@ -83,10 +86,11 @@ public void testFromAuthenticationMethod_bearer()\n                 \"user-agent\",\n                 httpClient)\n             .get();\n-    Assert.assertEquals(\n-        new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"),\n-        registryAuthenticator.getAuthenticationUrl(\n-            null, Collections.singletonMap(\"someimage\", \"scope\")));\n+    assertThat(\n+            registryAuthenticator.getAuthenticationUrl(\n+                null, Collections.singletonMap(\"someimage\", \"scope\")))\n+        .isEqualTo(\n+            new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"));\n \n     registryAuthenticator =\n         RegistryAuthenticator.fromAuthenticationMethod(\n@@ -95,10 +99,11 @@ public void testFromAuthenticationMethod_bearer()\n                 \"user-agent\",\n                 httpClient)\n             .get();\n-    Assert.assertEquals(\n-        new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"),\n-        registryAuthenticator.getAuthenticationUrl(\n-            null, Collections.singletonMap(\"someimage\", \"scope\")));\n+    assertThat(\n+            registryAuthenticator.getAuthenticationUrl(\n+                null, Collections.singletonMap(\"someimage\", \"scope\")))\n+        .isEqualTo(\n+            new URL(\"https://somerealm?service=someservice&scope=repository:someimage:scope\"));\n   }\n \n   @Test\n@@ -155,29 +160,34 @@ public void istAuthenticationUrl_oauth2() throws MalformedURLException {\n \n   @Test\n   public void testFromAuthenticationMethod_basic() throws RegistryAuthenticationFailedException {\n-    Assert.assertFalse(\n-        RegistryAuthenticator.fromAuthenticationMethod(\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n+                \"Basic\", registryEndpointRequestProperties, \"user-agent\", httpClient))\n+        .isEmpty();\n+\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n                 \"Basic realm=\\\"https://somerealm\\\",service=\\\"someservice\\\",scope=\\\"somescope\\\"\",\n                 registryEndpointRequestProperties,\n                 \"user-agent\",\n-                httpClient)\n-            .isPresent());\n+                httpClient))\n+        .isEmpty();\n \n-    Assert.assertFalse(\n-        RegistryAuthenticator.fromAuthenticationMethod(\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n                 \"BASIC realm=\\\"https://somerealm\\\",service=\\\"someservice\\\",scope=\\\"somescope\\\"\",\n                 registryEndpointRequestProperties,\n                 \"user-agent\",\n-                httpClient)\n-            .isPresent());\n+                httpClient))\n+        .isEmpty();\n \n-    Assert.assertFalse(\n-        RegistryAuthenticator.fromAuthenticationMethod(\n+    assertThat(\n+            RegistryAuthenticator.fromAuthenticationMethod(\n                 \"bASIC realm=\\\"https://somerealm\\\",service=\\\"someservice\\\",scope=\\\"somescope\\\"\",\n                 registryEndpointRequestProperties,\n                 \"user-agent\",\n-                httpClient)\n-            .isPresent());\n+                httpClient))\n+        .isEmpty();\n   }\n \n   @Test\n", "fixed_tests": {"jib-core:compileJava": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-cli:test": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-maven-plugin:test": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-core:test": {"run": "NONE", "test": "FAIL", "fix": "PASS"}}, "p2p_tests": {"jib-maven-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generatePomFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMetadataFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileTestJava": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-core:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginUnderTestMetadata": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:generateSources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:test": {"run": "NONE", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMavenPluginDescriptor": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginDescriptors": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}}, "f2p_tests": {"jib-core:test": {"run": "NONE", "test": "FAIL", "fix": "PASS"}}, "s2p_tests": {}, "n2p_tests": {"jib-core:compileJava": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-cli:test": {"run": "NONE", "test": "NONE", "fix": "PASS"}, "jib-maven-plugin:test": {"run": "NONE", "test": "NONE", "fix": "PASS"}}, "run_result": {"passed_count": 58, "failed_count": 20, "skipped_count": 15, "passed_tests": ["jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-plugins-extension-common:classes", "jib-maven-plugin:jar", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-core:processResources", "jib-gradle-plugin:processResources", "jib-maven-plugin-extension-api:clean", "jib-maven-plugin:generateMetadataFileForMavenJavaPublication", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:clean", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-cli:processTestResources", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testClasses", "jib-cli:generateSources"], "failed_tests": ["com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "com.google.cloud.tools.jib.gradle.skaffold.InitTaskTest > testFilesTask_singleProject", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForLabels", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForMainClass", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForExtraDirectories", "com.google.cloud.tools.jib.gradle.skaffold.InitTaskTest > testFilesTask_multiProject", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForImageAndTags", "jib-gradle-plugin:test", "com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_singleProject", "com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_withSkaffoldConfig", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForExtraDirectories_individualPaths", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTast_withConfigModifiers", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_multiProjectSimpleService", "com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_failIfJarContainerizationMode", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForJvmFlags", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_singleProject", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_multiProjectComplexService", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForContainerCreationAndFileModificationTimes", "com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_multiProjectOutput", "com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_failIfWar"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "test_patch_result": {"passed_count": 60, "failed_count": 7, "skipped_count": 15, "passed_tests": ["jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-plugins-common:test", "jib-maven-plugin:jar", "jib-plugins-extension-common:classes", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-core:processResources", "jib-gradle-plugin:processResources", "jib-maven-plugin-extension-api:clean", "jib-maven-plugin:generateMetadataFileForMavenJavaPublication", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-cli:processTestResources", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testClasses", "jib-cli:generateSources"], "failed_tests": ["com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForExtraDirectories", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForExtraDirectories_individualPaths", "jib-core:test", "com.google.cloud.tools.jib.registry.RegistryAuthenticatorTest > testFromAuthenticationMethod_basic", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForLabels", "jib-gradle-plugin:test"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "fix_patch_result": {"passed_count": 64, "failed_count": 17, "skipped_count": 15, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-maven-plugin:test", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-plugins-common:test", "jib-maven-plugin:jar", "jib-plugins-extension-common:classes", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-core:processResources", "jib-gradle-plugin:processResources", "jib-maven-plugin-extension-api:clean", "jib-maven-plugin:generateMetadataFileForMavenJavaPublication", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-cli:processTestResources", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-core:test", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test", "jib-cli:generateSources"], "failed_tests": ["com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_failIfJarContainerizationMode", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForMainClass", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForExtraDirectories", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "com.google.cloud.tools.jib.gradle.skaffold.SyncMapTaskTest > testSyncMapTask_singleProject", "jib-gradle-plugin:test", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForExtraDirectories_individualPaths", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_multiProjectSimpleService", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForJvmFlags", "com.google.cloud.tools.jib.gradle.skaffold.InitTaskTest > testFilesTask_multiProject", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTast_withConfigModifiers", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_singleProject", "com.google.cloud.tools.jib.gradle.skaffold.InitTaskTest > testFilesTask_singleProject", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForContainerCreationAndFileModificationTimes", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForLabels", "com.google.cloud.tools.jib.gradle.JibPluginTest > testLazyEvalForImageAndTags", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_multiProjectComplexService"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "instance_id": "googlecontainertools__jib-4035"}
{"org": "googlecontainertools", "repo": "jib", "number": 2542, "state": "closed", "title": "Solved : NPE if the server doesn't provide any HTTP content for an error", "body": "Fixes #2532 \r\n", "base": {"label": "GoogleContainerTools:master", "ref": "master", "sha": "34a757b0d64f19c47c60fcb56e705e14c2a4e0c8"}, "resolved_issues": [{"number": 2532, "title": "NPE if the server doesn't provide any HTTP content for an error", "body": "A user reported an NPE on the [Gitter channel](https://gitter.im/google/jib).\r\n\r\n```\r\nCaused by: java.lang.NullPointerException\r\n\tat com.fasterxml.jackson.core.JsonFactory.createParser(JsonFactory.java:889)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3005)\r\n\tat com.google.cloud.tools.jib.json.JsonTemplateMapper.readJson(JsonTemplateMapper.java:118)\r\n\tat com.google.cloud.tools.jib.json.JsonTemplateMapper.readJson (JsonTemplateMapper.java:118)\r\n\tat com.google.cloud.tools.jib.registry.RegistryEndpointCaller.newRegistryErrorException (RegistryEndpointCaller.java:194)\r\n```\r\n\r\nThe NPE is when there was an error communicating with the server. Jib tries to parse the content of the error message (supposed to be a JSON) from the server.\r\n```java\r\n      ErrorResponseTemplate errorResponse =\r\n          JsonTemplateMapper.readJson(responseException.getContent(), ErrorResponseTemplate.class);\r\n```\r\n\r\nI noticed that if we pass a null string, `JsonTemplateMapper.readJson()` throws NPE with the same stacktrace.\r\n```java\r\nJsonTemplateMapper.readJson((String) null, ErrorResponseTemplate.class);\r\n```\r\n\r\nTurns out `responseException.getContent()` can return null if there was no content from the server. The reason I think NullAway couldn't catch this is that the return value of `getContet()` basically comes from a method in the Google HTTP Client library."}], "fix_patch": "diff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java\nindex eb010f0075..d04c2cb5f8 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java\n@@ -46,8 +46,8 @@\n class RegistryEndpointCaller<T> {\n \n   /**\n-   * <a\n-   * href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308</a>.\n+   * <a href =\n+   * \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308</a>.\n    */\n   @VisibleForTesting static final int STATUS_CODE_PERMANENT_REDIRECT = 308;\n \n@@ -188,22 +188,28 @@ RegistryErrorException newRegistryErrorException(ResponseException responseExcep\n     RegistryErrorExceptionBuilder registryErrorExceptionBuilder =\n         new RegistryErrorExceptionBuilder(\n             registryEndpointProvider.getActionDescription(), responseException);\n-\n-    try {\n-      ErrorResponseTemplate errorResponse =\n-          JsonTemplateMapper.readJson(responseException.getContent(), ErrorResponseTemplate.class);\n-      for (ErrorEntryTemplate errorEntry : errorResponse.getErrors()) {\n-        registryErrorExceptionBuilder.addReason(errorEntry);\n+    if (responseException.getContent() != null) {\n+      try {\n+        ErrorResponseTemplate errorResponse =\n+            JsonTemplateMapper.readJson(\n+                responseException.getContent(), ErrorResponseTemplate.class);\n+        for (ErrorEntryTemplate errorEntry : errorResponse.getErrors()) {\n+          registryErrorExceptionBuilder.addReason(errorEntry);\n+        }\n+      } catch (IOException ex) {\n+        registryErrorExceptionBuilder.addReason(\n+            \"registry returned error code \"\n+                + responseException.getStatusCode()\n+                + \"; possible causes include invalid or wrong reference. Actual error output follows:\\n\"\n+                + responseException.getContent()\n+                + \"\\n\");\n       }\n-    } catch (IOException ex) {\n+    } else {\n       registryErrorExceptionBuilder.addReason(\n           \"registry returned error code \"\n               + responseException.getStatusCode()\n-              + \"; possible causes include invalid or wrong reference. Actual error output follows:\\n\"\n-              + responseException.getContent()\n-              + \"\\n\");\n+              + \" but did not return any details; possible causes include invalid or wrong reference, or proxy/firewall/VPN interfering \\n\");\n     }\n-\n     return registryErrorExceptionBuilder.build();\n   }\n \n", "test_patch": "diff --git a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java\nindex 903198104f..afe384cb04 100644\n--- a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java\n+++ b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryEndpointCallerTest.java\n@@ -435,6 +435,24 @@ public void testNewRegistryErrorException_nonJsonErrorOutput() {\n         registryException.getMessage());\n   }\n \n+  @Test\n+  public void testNewRegistryErrorException_noOutputFromRegistry() {\n+    ResponseException httpException = Mockito.mock(ResponseException.class);\n+    // Registry returning null error output\n+    Mockito.when(httpException.getContent()).thenReturn(null);\n+    Mockito.when(httpException.getStatusCode()).thenReturn(404);\n+\n+    RegistryErrorException registryException =\n+        endpointCaller.newRegistryErrorException(httpException);\n+    Assert.assertSame(httpException, registryException.getCause());\n+    Assert.assertEquals(\n+        \"Tried to actionDescription but failed because: registry returned error code 404 \"\n+            + \"but did not return any details; possible causes include invalid or wrong reference, or proxy/firewall/VPN interfering \\n\"\n+            + \" | If this is a bug, please file an issue at \"\n+            + \"https://github.com/GoogleContainerTools/jib/issues/new\",\n+        registryException.getMessage());\n+  }\n+\n   /**\n    * Verifies that a response with {@code httpStatusCode} throws {@link\n    * RegistryUnauthorizedException}.\n", "fixed_tests": {"jib-core:test": {"run": "PASS", "test": "FAIL", "fix": "PASS"}}, "p2p_tests": {"jib-maven-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generatePomFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginUnderTestMetadata": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMavenPluginDescriptor": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginDescriptors": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}}, "f2p_tests": {"jib-core:test": {"run": "PASS", "test": "FAIL", "fix": "PASS"}}, "s2p_tests": {}, "n2p_tests": {}, "run_result": {"passed_count": 75, "failed_count": 11, "skipped_count": 16, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:compileJava", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:compileJava", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-build-plan:compileTestJava", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-maven-plugin-extension-api:compileJava", "jib-core:processResources", "jib-build-plan:compileJava", "jib-maven-plugin-extension-api:clean", "jib-gradle-plugin:processResources", "jib-gradle-plugin:test", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:compileJava", "jib-gradle-plugin-extension-api:compileJava", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:test", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-core:test", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test"], "failed_tests": ["com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_multiProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceDefault", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceMultipleProfiles", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_skaffoldConfig", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceLocalProfile", "jib-maven-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule_differentParent", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_simpleTestProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceRemoteProfile", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_singleModule"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-cli:processTestResources", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "test_patch_result": {"passed_count": 74, "failed_count": 13, "skipped_count": 16, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:compileJava", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:compileJava", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-build-plan:compileTestJava", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-maven-plugin-extension-api:compileJava", "jib-core:processResources", "jib-build-plan:compileJava", "jib-maven-plugin-extension-api:clean", "jib-gradle-plugin:processResources", "jib-gradle-plugin:test", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:compileJava", "jib-gradle-plugin-extension-api:compileJava", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:test", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test"], "failed_tests": ["com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_singleModule", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_multiProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceDefault", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceMultipleProfiles", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_skaffoldConfig", "jib-core:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceLocalProfile", "jib-maven-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule_differentParent", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_simpleTestProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceRemoteProfile", "com.google.cloud.tools.jib.registry.RegistryEndpointCallerTest > testNewRegistryErrorException_noOutputFromRegistry"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-cli:processTestResources", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "fix_patch_result": {"passed_count": 75, "failed_count": 11, "skipped_count": 16, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:compileJava", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:compileJava", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-build-plan:compileTestJava", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-maven-plugin-extension-api:compileJava", "jib-core:processResources", "jib-build-plan:compileJava", "jib-maven-plugin-extension-api:clean", "jib-gradle-plugin:processResources", "jib-gradle-plugin:test", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:compileJava", "jib-gradle-plugin-extension-api:compileJava", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:test", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-core:test", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test"], "failed_tests": ["com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_multiProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceDefault", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceMultipleProfiles", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_skaffoldConfig", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceLocalProfile", "jib-maven-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule_differentParent", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_simpleTestProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceRemoteProfile", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_singleModule"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-cli:processTestResources", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "instance_id": "googlecontainertools__jib-2542"}
{"org": "googlecontainertools", "repo": "jib", "number": 2536, "state": "closed", "title": "Fix NPE when reading \"auths\" section in ~/.docker/config.json", "body": "Fixes #2535.", "base": {"label": "GoogleContainerTools:master", "ref": "master", "sha": "cb78087f2738ab214af739b915e7279b4fcf6aa1"}, "resolved_issues": [{"number": 2535, "title": "Possible NPE from DockerConfigCredentialRetriever with 2.4.0", "body": "@Gsealy reported NPE on Jib 2.4.0. This looks like a regression introduced by #2489.\r\n\r\n---\r\n\r\n**EnvironmentÔºö** \r\nWindows Terminal \r\n```\r\nApache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)\r\nMaven home: C:\\apache-maven\\bin\\..\r\nJava version: 11, vendor: Oracle Corporation, runtime: C:\\Java\\jdk-11\r\nDefault locale: zh_CN, platform encoding: GBK\r\nOS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\r\n```\r\ndocker for windows version: \r\n```\r\ndocker desktop: 2.3.0(45519)\r\nDocker version 19.03.8, build afacb8b\r\nCredntial Helper: 0.6.3\r\n```\r\n\r\n**`jib-maven-plugin` Configuration:**\r\n```\r\n     <plugin>\r\n        <groupId>com.google.cloud.tools</groupId>\r\n        <artifactId>jib-maven-plugin</artifactId>\r\n        <version>2.4.0</version>\r\n        <configuration>\r\n          <from>\r\n            <image>hub.gsealy.cn/base-image/jdk:11.0</image>\r\n          </from>\r\n          <to>\r\n            <image>spring-boot-jib</image>\r\n          </to>\r\n          <allowInsecureRegistries>true</allowInsecureRegistries>\r\n          <container>\r\n            <ports>\r\n              <port>9999</port>\r\n            </ports>\r\n          </container>\r\n        </configuration>\r\n      </plugin>\r\n```\r\n**description:**\r\nwe are use harbor for docker registry at inner network, and use Let's encrypt cert for ssl. `2.3.0` also print warning but build succeed.\r\nI don't find `docker-credential-desktop.cmd` in system, just have `docker-credential-desktop.exe`\r\n\r\n```\r\n... omit ...\r\n[DEBUG] trying docker-credential-desktop for hub.gsealy.cn\r\n[WARNING] Cannot run program \"docker-credential-desktop.cmd\": CreateProcess error=2, cannot find the file.\r\n[WARNING]   Caused by: CreateProcess error=2, cannot find the file.\r\n... omit ...\r\n```\r\nbut `2.4.0` was facing the NPE\r\n```\r\n[ERROR] Failed to execute goal com.google.cloud.tools:jib-maven-plugin:2.4.0:buildTar (default-cli) on project\r\n jib: (null exception message): NullPointerException -> [Help 1]\r\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal com.google.cloud.tools:jib-maven-plugin:2.4.0:buildTar (default-cli) on project jib: (null exception message)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:566)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)\r\nCaused by: org.apache.maven.plugin.MojoExecutionException: (null exception message)\r\n    at com.google.cloud.tools.jib.maven.BuildTarMojo.execute (BuildTarMojo.java:140)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:956)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:566)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)\r\nCaused by: java.lang.NullPointerException\r\n    at java.lang.String.<init> (String.java:561)\r\n    at com.google.cloud.tools.jib.registry.credentials.DockerConfigCredentialRetriever.retrieve (DockerConfigCredentialRetriever.java:146)\r\n    at com.google.cloud.tools.jib.registry.credentials.DockerConfigCredentialRetriever.retrieve (DockerConfigCredentialRetriever.java:104)\r\n    at com.google.cloud.tools.jib.frontend.CredentialRetrieverFactory.lambda$dockerConfig$4 (CredentialRetrieverFactory.java:277)\r\n    at com.google.cloud.tools.jib.builder.steps.RegistryCredentialRetriever.retrieve (RegistryCredentialRetriever.java:47)\r\n    at com.google.cloud.tools.jib.builder.steps.RegistryCredentialRetriever.getBaseImageCredential (RegistryCredentialRetriever.java:34)\r\n    at com.google.cloud.tools.jib.builder.steps.PullBaseImageStep.call (PullBaseImageStep.java:134)\r\n    at com.google.cloud.tools.jib.builder.steps.PullBaseImageStep.call (PullBaseImageStep.java:56)\r\n    at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly (TrustedListenableFutureTask.java:125)\r\n    at com.google.common.util.concurrent.InterruptibleTask.run (InterruptibleTask.java:69)\r\n    at com.google.common.util.concurrent.TrustedListenableFutureTask.run (TrustedListenableFutureTask.java:78)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\r\n    at java.lang.Thread.run (Thread.java:834)\r\n```\r\n\r\n_Originally posted by @Gsealy in https://github.com/GoogleContainerTools/jib/issues/2527#issuecomment-646463172_"}], "fix_patch": "diff --git a/jib-core/CHANGELOG.md b/jib-core/CHANGELOG.md\nindex 564d1a1aa6..3104ccc909 100644\n--- a/jib-core/CHANGELOG.md\n+++ b/jib-core/CHANGELOG.md\n@@ -9,6 +9,8 @@ All notable changes to this project will be documented in this file.\n \n ### Fixed\n \n+- Fixed `NullPointerException` when the `\"auths\":` section in `~/.docker/config.json` has an entry with no `\"auth\":` field. ([#2535](https://github.com/GoogleContainerTools/jib/issues/2535))\n+\n ## 0.15.0\n \n ### Added\ndiff --git a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetriever.java b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetriever.java\nindex 89318bef0a..50c97929a0 100644\n--- a/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetriever.java\n+++ b/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetriever.java\n@@ -140,7 +140,7 @@ Optional<Credential> retrieve(DockerConfig dockerConfig, Consumer<LogEvent> logg\n \n       // Lastly, find defined auth.\n       AuthTemplate auth = dockerConfig.getAuthFor(registryAlias);\n-      if (auth != null) {\n+      if (auth != null && auth.getAuth() != null) {\n         // 'auth' is a basic authentication token that should be parsed back into credentials\n         String usernameColonPassword =\n             new String(Base64.decodeBase64(auth.getAuth()), StandardCharsets.UTF_8);\ndiff --git a/jib-gradle-plugin/CHANGELOG.md b/jib-gradle-plugin/CHANGELOG.md\nindex d38ea696b9..1e45ed28c7 100644\n--- a/jib-gradle-plugin/CHANGELOG.md\n+++ b/jib-gradle-plugin/CHANGELOG.md\n@@ -12,6 +12,7 @@ All notable changes to this project will be documented in this file.\n ### Fixed\n \n - Fixed reporting a wrong credential helper name when the helper does not exist on Windows. ([#2527](https://github.com/GoogleContainerTools/jib/issues/2527))\n+- Fixed `NullPointerException` when the `\"auths\":` section in `~/.docker/config.json` has an entry with no `\"auth\":` field. ([#2535](https://github.com/GoogleContainerTools/jib/issues/2535))\n \n ## 2.4.0\n \ndiff --git a/jib-maven-plugin/CHANGELOG.md b/jib-maven-plugin/CHANGELOG.md\nindex f112cb78a9..b9a9a690d2 100644\n--- a/jib-maven-plugin/CHANGELOG.md\n+++ b/jib-maven-plugin/CHANGELOG.md\n@@ -12,6 +12,7 @@ All notable changes to this project will be documented in this file.\n ### Fixed\n \n - Fixed reporting a wrong credential helper name when the helper does not exist on Windows. ([#2527](https://github.com/GoogleContainerTools/jib/issues/2527))\n+- Fixed `NullPointerException` when the `\"auths\":` section in `~/.docker/config.json` has an entry with no `\"auth\":` field. ([#2535](https://github.com/GoogleContainerTools/jib/issues/2535))\n \n ## 2.4.0\n \n", "test_patch": "diff --git a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetrieverTest.java b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetrieverTest.java\nindex 6fe02af2b8..47803f2de5 100644\n--- a/jib-core/src/test/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetrieverTest.java\n+++ b/jib-core/src/test/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetrieverTest.java\n@@ -194,4 +194,15 @@ public void testRetrieve_azureIdentityToken() throws IOException, URISyntaxExcep\n     Assert.assertEquals(\"<token>\", credentials.get().getUsername());\n     Assert.assertEquals(\"cool identity token\", credentials.get().getPassword());\n   }\n+\n+  @Test\n+  public void testRetrieve_noErrorWhenMissingAuthField() throws IOException, URISyntaxException {\n+    Path dockerConfigFile = Paths.get(Resources.getResource(\"core/json/dockerconfig.json\").toURI());\n+\n+    DockerConfigCredentialRetriever dockerConfigCredentialRetriever =\n+        DockerConfigCredentialRetriever.create(\"no auth field\", dockerConfigFile);\n+\n+    Optional<Credential> credentials = dockerConfigCredentialRetriever.retrieve(mockLogger);\n+    Assert.assertFalse(credentials.isPresent());\n+  }\n }\ndiff --git a/jib-core/src/test/resources/core/json/dockerconfig.json b/jib-core/src/test/resources/core/json/dockerconfig.json\nindex 00d7673bd1..8df57f4153 100644\n--- a/jib-core/src/test/resources/core/json/dockerconfig.json\n+++ b/jib-core/src/test/resources/core/json/dockerconfig.json\n@@ -4,7 +4,8 @@\n     \"some registry\":{\"auth\":\"c29tZTphdXRo\",\"password\":\"ignored\"},\n     \"https://registry\":{\"auth\":\"dG9rZW4=\"},\n \n-    \"example.com\":{\"auth\":\"should not match example\"}\n+    \"example.com\":{\"auth\":\"should not match example\"},\n+    \"no auth field\":{}\n   },\n   \"credsStore\":\"some credential store\",\n   \"credHelpers\":{\n", "fixed_tests": {"jib-gradle-plugin:test": {"run": "FAIL", "test": "FAIL", "fix": "PASS"}, "jib-core:test": {"run": "PASS", "test": "FAIL", "fix": "PASS"}}, "p2p_tests": {"jib-maven-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generatePomFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginUnderTestMetadata": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:test": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-extension-common:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin-extension-api:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-build-plan:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMavenPluginDescriptor": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-cli:clean": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:pluginDescriptors": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-gradle-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}}, "f2p_tests": {"jib-gradle-plugin:test": {"run": "FAIL", "test": "FAIL", "fix": "PASS"}, "jib-core:test": {"run": "PASS", "test": "FAIL", "fix": "PASS"}}, "s2p_tests": {}, "n2p_tests": {}, "run_result": {"passed_count": 74, "failed_count": 13, "skipped_count": 16, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:compileJava", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:compileJava", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-build-plan:compileTestJava", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-maven-plugin-extension-api:compileJava", "jib-core:processResources", "jib-build-plan:compileJava", "jib-maven-plugin-extension-api:clean", "jib-gradle-plugin:processResources", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:compileJava", "jib-gradle-plugin-extension-api:compileJava", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:test", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-core:test", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test"], "failed_tests": ["com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_multiProjectOutput", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceDefault", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceMultipleProfiles", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_skaffoldConfig", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceLocalProfile", "jib-maven-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule_differentParent", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_simpleTestProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceRemoteProfile", "jib-gradle-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_singleModule"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-cli:processTestResources", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "test_patch_result": {"passed_count": 73, "failed_count": 15, "skipped_count": 16, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:compileJava", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:compileJava", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-build-plan:compileTestJava", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-maven-plugin-extension-api:compileJava", "jib-core:processResources", "jib-build-plan:compileJava", "jib-maven-plugin-extension-api:clean", "jib-gradle-plugin:processResources", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:compileJava", "jib-gradle-plugin-extension-api:compileJava", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:test", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test"], "failed_tests": ["com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_multiProjectOutput", "com.google.cloud.tools.jib.gradle.skaffold.FilesTaskV2Test > testFilesTask_platformProject", "com.google.cloud.tools.jib.registry.credentials.DockerConfigCredentialRetrieverTest > testRetrieve_noErrorWhenMissingAuthField", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceMultipleProfiles", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceDefault", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_skaffoldConfig", "jib-core:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceLocalProfile", "jib-maven-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule_differentParent", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_simpleTestProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceRemoteProfile", "jib-gradle-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_singleModule"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-cli:processTestResources", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "fix_patch_result": {"passed_count": 75, "failed_count": 11, "skipped_count": 16, "passed_tests": ["jib-plugins-common:testClasses", "jib-maven-plugin:compileJava", "jib-maven-plugin:processResources", "jib-plugins-extension-common:ensureTransitiveDependencyOverrides", "jib-core:jar", "jib-maven-plugin:compileTestJava", "jib-gradle-plugin:compileTestJava", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-cli:compileJava", "jib-core:compileJava", "jib-core:classes", "jib-maven-plugin-extension-api:testClasses", "jib-maven-plugin:processTestResources", "jib-core:testJar", "jib-plugins-common:compileTestJava", "jib-plugins-common:testJar", "jib-maven-plugin:testClasses", "jib-core:testClasses", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-gradle-plugin-extension-api:clean", "jib-maven-plugin:classes", "jib-gradle-plugin:clean", "jib-cli:compileTestJava", "jib-maven-plugin:jar", "jib-plugins-common:test", "jib-plugins-extension-common:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:publishToMavenLocal", "jib-maven-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:compileJava", "jib-maven-plugin-extension-api:classes", "jib-cli:testClasses", "jib-build-plan:compileTestJava", "jib-gradle-plugin-extension-api:testClasses", "jib-core:processTestResources", "jib-maven-plugin-extension-api:compileJava", "jib-core:processResources", "jib-build-plan:compileJava", "jib-maven-plugin-extension-api:clean", "jib-gradle-plugin:processResources", "jib-gradle-plugin:test", "jib-build-plan:ensureTransitiveDependencyOverrides", "jib-build-plan:classes", "jib-gradle-plugin-extension-api:ensureTransitiveDependencyOverrides", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:classes", "jib-gradle-plugin:compileJava", "jib-gradle-plugin-extension-api:compileJava", "jib-gradle-plugin:testClasses", "jib-plugins-extension-common:clean", "jib-cli:ensureTransitiveDependencyOverrides", "jib-plugins-extension-common:testClasses", "jib-core:compileTestJava", "jib-core:clean", "jib-build-plan:test", "jib-build-plan:testClasses", "jib-gradle-plugin:pluginUnderTestMetadata", "jib-plugins-common:jar", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-cli:clean", "jib-plugins-common:clean", "jib-gradle-plugin:classes", "jib-core:ensureTransitiveDependencyOverrides", "jib-gradle-plugin-extension-api:classes", "jib-maven-plugin:clean", "jib-gradle-plugin:pluginDescriptors", "jib-cli:classes", "jib-build-plan:clean", "jib-core:test", "jib-gradle-plugin:processTestResources", "jib-build-plan:processTestResources", "jib-plugins-common:processTestResources", "jib-gradle-plugin:ensureTransitiveDependencyOverrides", "jib-cli:test"], "failed_tests": ["com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_multiProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceDefault", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceMultipleProfiles", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_skaffoldConfig", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceLocalProfile", "jib-maven-plugin:test", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_multiModule_differentParent", "com.google.cloud.tools.jib.maven.skaffold.SyncMapMojoTest > testSyncMapMojo_simpleTestProjectOutput", "com.google.cloud.tools.jib.maven.skaffold.PackageGoalsMojoTest > testPackageGoalsMojo_complexServiceRemoteProfile", "com.google.cloud.tools.jib.maven.skaffold.InitMojoTest > testFilesMojo_singleModule"], "skipped_tests": ["jib-cli:processResources", "jib-plugins-extension-common:compileTestJava", "jib-plugins-extension-common:test", "jib-maven-plugin-extension-api:compileTestJava", "jib-maven-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:test", "jib-cli:processTestResources", "jib-plugins-common:processResources", "jib-gradle-plugin-extension-api:processResources", "jib-gradle-plugin-extension-api:processTestResources", "jib-maven-plugin-extension-api:test", "jib-plugins-extension-common:processTestResources", "jib-maven-plugin-extension-api:processTestResources", "jib-gradle-plugin-extension-api:compileTestJava", "jib-build-plan:processResources", "jib-plugins-extension-common:processResources"]}, "instance_id": "googlecontainertools__jib-2536"}
{"org": "googlecontainertools", "repo": "jib", "number": 2688, "state": "closed", "title": "Fix NPE when Spring Boot Maven Plugin doesn't have <configuration>", "body": "Fixes #2687.", "base": {"label": "GoogleContainerTools:master", "ref": "master", "sha": "7b36544eca5e72aba689760118b98419ef4dd179"}, "resolved_issues": [{"number": 2687, "title": "jib-maven-plugin:2.5.0:build failed - NullPointerException in getSpringBootRepackageConfiguration", "body": "**Environment**:\r\n\r\n- *Jib version:* 2.5.0\r\n- *Build tool:* maven:3.6.3-amazoncorretto-11\r\n- *OS:* Amazon Linux 2\r\n\r\n\r\n**Description of the issue**:\r\n\r\nAfter upgrading from 2.4.0 to 2.5.0 we have NullPointerException during build. It looks that the issue is in getSpringBootRepackageConfiguration when spring-boot-maven-plugin configuration section is not provided.\r\n\r\n\r\n**Steps to reproduce**:\r\n\r\nUse spring-boot-maven-plugin without configuration section (we also don't have this section in our parent pom): \r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n\r\n\r\n**Workaround**:\r\n\r\nJust add configuration (may be empty):\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration></configuration>\r\n            </plugin>\r\n\r\n\r\n**Log output**:\r\n```\r\n[ERROR] Failed to execute goal com.google.cloud.tools:jib-maven-plugin:2.5.0:build (default-cli) on project my-service: Execution default-cli of goal com.google.cloud.tools:jib-maven-plugin:2.5.0:build failed. NullPointerException -> [Help 1]\r\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal com.google.cloud.tools:jib-maven-plugin:2.5.0:build (default-cli) on project notification-sender-service: Execution default-cli of goal com.google.cloud.tools:jib-maven-plugin:2.5.0:build failed.\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:566)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\nCaused by: org.apache.maven.plugin.PluginExecutionException: Execution default-cli of goal com.google.cloud.tools:jib-maven-plugin:2.5.0:build failed.\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:148)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:566)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\nCaused by: java.lang.NullPointerException\r\n    at java.util.Objects.requireNonNull (Objects.java:221)\r\n    at java.util.Optional.<init> (Optional.java:107)\r\n    at java.util.Optional.of (Optional.java:120)\r\n    at com.google.cloud.tools.jib.maven.MavenProjectProperties.getSpringBootRepackageConfiguration(MavenProjectProperties.java:571)\r\n    at com.google.cloud.tools.jib.maven.MavenProjectProperties.getJarArtifact (MavenProjectProperties.java:524)\r\n    at com.google.cloud.tools.jib.maven.MavenProjectProperties.createJibContainerBuilder (MavenProjectProperties.java:283)\r\n    at com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessor.processCommonConfiguration (PluginConfigurationProcessor.java:398)\r\n    at com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessor.processCommonConfiguration (PluginConfigurationProcessor.java:455)\r\n    at com.google.cloud.tools.jib.plugins.common.PluginConfigurationProcessor.createJibBuildRunnerForRegistryImage (PluginConfigurationProcessor.java:274)\r\n    at com.google.cloud.tools.jib.maven.BuildImageMojo.execute (BuildImageMojo.java:102)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:566)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\r\n[ERROR] \r\n```\r\n\r\n**Additional Information**: <!-- Any additional information that may be helpful -->\r\n\r\nIt may be connected with https://github.com/GoogleContainerTools/jib/issues/2565"}], "fix_patch": "diff --git a/jib-maven-plugin/CHANGELOG.md b/jib-maven-plugin/CHANGELOG.md\nindex d3c579ecb1..643bf3a30d 100644\n--- a/jib-maven-plugin/CHANGELOG.md\n+++ b/jib-maven-plugin/CHANGELOG.md\n@@ -9,6 +9,8 @@ All notable changes to this project will be documented in this file.\n \n ### Fixed\n \n+- Fixed `NullPointerException` when the Spring Boot Maven plugin does not have a `<configuration>` block. ([#2687](https://github.com/GoogleContainerTools/jib/issues/2687))\n+\n ## 2.5.0\n \n ### Added\ndiff --git a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\nindex e39a5a0e8d..cf5a9a207b 100644\n--- a/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n+++ b/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java\n@@ -567,8 +567,8 @@ Optional<Xpp3Dom> getSpringBootRepackageConfiguration() {\n         if (execution.getGoals().contains(\"repackage\")) {\n           Xpp3Dom configuration = (Xpp3Dom) execution.getConfiguration();\n \n-          boolean skip = Boolean.valueOf(getChildValue(configuration, \"skip\").orElse(\"false\"));\n-          return skip ? Optional.empty() : Optional.of(configuration);\n+          boolean skip = Boolean.parseBoolean(getChildValue(configuration, \"skip\").orElse(\"false\"));\n+          return skip ? Optional.empty() : Optional.ofNullable(configuration);\n         }\n       }\n     }\n", "test_patch": "diff --git a/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/MavenProjectPropertiesTest.java b/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/MavenProjectPropertiesTest.java\nindex d7ee91cdb9..915a120edc 100644\n--- a/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/MavenProjectPropertiesTest.java\n+++ b/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/MavenProjectPropertiesTest.java\n@@ -780,6 +780,17 @@ public void testGetSpringBootRepackageConfiguration_pluginNotApplied() {\n         Optional.empty(), mavenProjectProperties.getSpringBootRepackageConfiguration());\n   }\n \n+  @Test\n+  public void testGetSpringBootRepackageConfiguration_noConfigurationBlock() {\n+    Mockito.when(mockMavenProject.getPlugin(\"org.springframework.boot:spring-boot-maven-plugin\"))\n+        .thenReturn(mockPlugin);\n+    Mockito.when(mockPlugin.getExecutions()).thenReturn(Arrays.asList(mockPluginExecution));\n+    Mockito.when(mockPluginExecution.getGoals()).thenReturn(Arrays.asList(\"repackage\"));\n+    Mockito.when(mockPluginExecution.getConfiguration()).thenReturn(null);\n+    Assert.assertEquals(\n+        Optional.empty(), mavenProjectProperties.getSpringBootRepackageConfiguration());\n+  }\n+\n   @Test\n   public void testGetSpringBootRepackageConfiguration_noExecutions() {\n     Mockito.when(mockMavenProject.getPlugin(\"org.springframework.boot:spring-boot-maven-plugin\"))\n", "fixed_tests": {"jib-maven-plugin:test": {"run": "PASS", "test": "FAIL", "fix": "PASS"}}, "p2p_tests": {"jib-maven-plugin:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:publishToMavenLocal": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:classes": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:jar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileTestJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generateMavenPluginDescriptor": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:processTestResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:testClasses": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-plugins-common:ensureTransitiveDependencyOverrides": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-core:testJar": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:processResources": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:generatePomFileForMavenJavaPublication": {"run": "PASS", "test": "PASS", "fix": "PASS"}, "jib-maven-plugin:compileJava": {"run": "PASS", "test": "PASS", "fix": "PASS"}}, "f2p_tests": {"jib-maven-plugin:test": {"run": "PASS", "test": "FAIL", "fix": "PASS"}}, "s2p_tests": {}, "n2p_tests": {}, "run_result": {"passed_count": 29, "failed_count": 0, "skipped_count": 0, "passed_tests": ["jib-maven-plugin:testClasses", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-plugins-common:classes", "jib-maven-plugin:classes", "jib-plugins-common:compileTestJava", "jib-plugins-common:processTestResources", "jib-maven-plugin:jar", "jib-core:testClasses", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testJar", "jib-plugins-common:testClasses", "jib-maven-plugin:test", "jib-core:testJar", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-maven-plugin:compileJava", "jib-core:compileTestJava", "jib-maven-plugin:publishToMavenLocal", "jib-core:compileJava", "jib-plugins-common:jar", "jib-core:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:compileTestJava", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-maven-plugin:processTestResources", "jib-core:ensureTransitiveDependencyOverrides", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-core:processResources", "jib-maven-plugin:processResources", "jib-core:processTestResources"], "failed_tests": [], "skipped_tests": []}, "test_patch_result": {"passed_count": 28, "failed_count": 2, "skipped_count": 0, "passed_tests": ["jib-maven-plugin:testClasses", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-plugins-common:classes", "jib-maven-plugin:classes", "jib-plugins-common:compileTestJava", "jib-plugins-common:processTestResources", "jib-maven-plugin:jar", "jib-core:testClasses", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testJar", "jib-plugins-common:testClasses", "jib-core:testJar", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-maven-plugin:compileJava", "jib-core:compileTestJava", "jib-maven-plugin:publishToMavenLocal", "jib-core:compileJava", "jib-plugins-common:jar", "jib-core:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:compileTestJava", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-maven-plugin:processTestResources", "jib-core:ensureTransitiveDependencyOverrides", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-core:processResources", "jib-maven-plugin:processResources", "jib-core:processTestResources"], "failed_tests": ["com.google.cloud.tools.jib.maven.MavenProjectPropertiesTest > testGetSpringBootRepackageConfiguration_noConfigurationBlock", "jib-maven-plugin:test"], "skipped_tests": []}, "fix_patch_result": {"passed_count": 29, "failed_count": 0, "skipped_count": 0, "passed_tests": ["jib-maven-plugin:testClasses", "jib-maven-plugin:publishMavenJavaPublicationToMavenLocal", "jib-plugins-common:classes", "jib-maven-plugin:classes", "jib-plugins-common:compileTestJava", "jib-plugins-common:processTestResources", "jib-maven-plugin:jar", "jib-core:testClasses", "jib-maven-plugin:ensureTransitiveDependencyOverrides", "jib-plugins-common:testJar", "jib-plugins-common:testClasses", "jib-maven-plugin:test", "jib-core:testJar", "jib-maven-plugin:generatePomFileForMavenJavaPublication", "jib-maven-plugin:compileJava", "jib-core:compileTestJava", "jib-maven-plugin:publishToMavenLocal", "jib-core:compileJava", "jib-plugins-common:jar", "jib-core:classes", "jib-plugins-common:compileJava", "jib-maven-plugin:compileTestJava", "jib-maven-plugin:generateMavenPluginDescriptor", "jib-maven-plugin:processTestResources", "jib-core:ensureTransitiveDependencyOverrides", "jib-plugins-common:ensureTransitiveDependencyOverrides", "jib-core:processResources", "jib-maven-plugin:processResources", "jib-core:processTestResources"], "failed_tests": [], "skipped_tests": []}, "instance_id": "googlecontainertools__jib-2688"}
